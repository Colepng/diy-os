name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Nightly
      working-directory: .
      run: |
          rustup toolchain install nightly --component rust-src  --component clippy
          rustup override set nightly
    - name: Install x86_64-unknown-none
      working-directory: .
      run: rustup target add x86_64-unknown-none
    - name: Lint workspace
      working-directory: .
      # exclude is used to prevent bootloader create being built
      # which fails in ci
      run: cargo clippy --workspace --exclude runners -- -D warnings

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Nightly
      working-directory: .
      run: |
          rustup toolchain install nightly --component rust-src
          rustup override set nightly
    - name: Install x86_64-unknown-none
      working-directory: .
      run: rustup target add x86_64-unknown-none
    - name: Build workspace
      working-directory: .
      # exclude is used to prevent bootloader create being built
      # which fails in ci
      run: cargo build --workspace --exclude runners --verbose

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Nightly
      working-directory: .
      run: |
          rustup toolchain install nightly --component rust-src
          rustup override set nightly
    - name: Run diy-os tests
      working-directory: ./diy-os
      run: cargo test --lib --target=x86_64-unknown-linux-gnu
    - name: Run workspace tests
      working-directory: .
      run: cargo test --target=x86_64-unknown-linux-gnu

  miri:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Miri
      working-directory: .
      run: |
          rustup toolchain install nightly --component miri --component rust-src
          rustup override set nightly
          cargo miri setup
    - name: Run miri on diy-os
      working-directory: ./diy-os
      run: MIRIFLAGS=-Zmiri-disable-isolation cargo miri test --target=x86_64-unknown-linux-gnu --lib
    - name: Run miri on workspace
      working-directory: .
      run: cargo miri test
